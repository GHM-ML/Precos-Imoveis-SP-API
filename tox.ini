# Arquivo de configuração do tox conforme especificado na documentação: https://tox.wiki/en/latest/
# tox é um gerenciador de ambientes virtuais genéricos e ferramenta de teste em linha de comando que:
# Checa se o package se instala corretamente em versões e interpretadores Python diferentes
# Roda testes em cada um dos ambientes, configurando a ferramenta de teste escolhida
# Age como frontend para servidores de Integração contínua (CI)


[pytest]
log_cli_level=WARNING

# Esta seção define configurações globais
[tox]
envlist = test_app, typechecks, stylechecks, lint
skipsdist = True

# Seção principal de ambientes de teste
[testenv]
install_command = pip install {opts} {packages}

passenv =
	PIP_EXTRA_INDEX_URL

# Seção que executa os testes
[testenv:test_app]
deps =
	-rtest_requeriments.txt

setenv =
	PYTHONPATH=.
	PYTHONHASHSEED=0

commands=
	pytest -vv {posargs:app/tests/}

# Seção que roda fastAPI
[testenv:run]
envdir = {toxworkdir}/test_app
deps =
	{[testenv:test_app]deps}

setenv =
	{[testenv:test_app]setenv}

commands=
	python app/main.py

# Ambientes a seguir são para checagem de tipo e estilo de programação
# mypy, flake8, isort e black
[testenv:typechecks]
envdir = {toxworkdir}/test_app

deps =
	{[testenv:test_app]deps}

commands = {posargs:mypy app}


[testenv:stylechecks]
envdir = {toxworkdir}/test_app

deps =
	{[testenv:test_app]deps}

commands = {posargs:flake8 app}


[testenv:lint]
envdir = {toxworkdir}/test_app

deps =
	{[testenv:test_app]deps}

commands =
	isort app
	black app
	mypy app
	flake8 app

[flake8]
exclude = .git,__pycache__,__init__.py,.mypy_cache,.pytest_cache,.venv,alembic
max-line-length = 88
